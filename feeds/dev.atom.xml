<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Alexandre Vicenzi's Blog</title><link href="https://blog.alexandrevicenzi.com/" rel="alternate"></link><link href="https://blog.alexandrevicenzi.com/feeds/dev.atom.xml" rel="self"></link><id>https://blog.alexandrevicenzi.com/</id><updated>2016-07-31T08:00:00-04:00</updated><entry><title>Qt Designer error: cannot find -lGL</title><link href="https://blog.alexandrevicenzi.com/qt-designer-compile-error.html" rel="alternate"></link><published>2016-07-31T08:00:00-04:00</published><author><name>Alexandre Vicenzi</name></author><id>tag:blog.alexandrevicenzi.com,2016-07-31:qt-designer-compile-error.html</id><summary type="html">&lt;p&gt;After upgrading to openSUSE Tumbleweed I got an error while trying to compile a Qt project as shown below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;23:42:00: Running steps &lt;span class="k"&gt;for&lt;/span&gt; project qt-quick...
23:42:00: Configuration unchanged, skipping qmake step.
23:42:00: Starting: &lt;span class="s2"&gt;&amp;quot;/usr/bin/make&amp;quot;&lt;/span&gt; 
/home/alexandre/Qt/5.7/gcc_64/bin/rcc -name qml ../qt-quick/qml.qrc -o qrc_qml.cpp
g++ -c -pipe -g -std&lt;span class="o"&gt;=&lt;/span&gt;gnu++11 -Wall -W -D_REENTRANT -fPIC -DQT_QML_DEBUG -DQT_QUICK_LIB -DQT_GUI_LIB -DQT_QML_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -I../qt-quick -I. -I../../Qt/5.7/gcc_64/include -I../../Qt/5.7/gcc_64/include/QtQuick -I../../Qt/5.7/gcc_64/include/QtGui -I../../Qt/5.7/gcc_64/include/QtQml -I../../Qt/5.7/gcc_64/include/QtNetwork -I../../Qt/5.7/gcc_64/include/QtCore -I. -I../../Qt/5.7/gcc_64/mkspecs/linux-g++ -o qrc_qml.o qrc_qml.cpp
g++ -Wl,-rpath,/home/alexandre/Qt/5.7/gcc_64/lib -o qt-quick main.o qrc_qml.o   -L/home/alexandre/Qt/5.7/gcc_64/lib -lQt5Quick -L/usr/lib64 -lQt5Gui -lQt5Qml -lQt5Network -lQt5Core -lGL -lpthread 
/usr/lib64/gcc/x86_64-suse-linux/6/../../../../x86_64-suse-linux/bin/ld: cannot find -lGL
collect2: error: ld returned &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; status
make: *** &lt;span class="o"&gt;[&lt;/span&gt;Makefile:210: qt-quick&lt;span class="o"&gt;]&lt;/span&gt; Error 1
23:42:00: The process &lt;span class="s2"&gt;&amp;quot;/usr/bin/make&amp;quot;&lt;/span&gt; exited with code 2.
Error &lt;span class="k"&gt;while&lt;/span&gt; building/deploying project qt-quick &lt;span class="o"&gt;(&lt;/span&gt;kit: Desktop Qt 5.7.0 GCC 64bit&lt;span class="o"&gt;)&lt;/span&gt;
When executing step &lt;span class="s2"&gt;&amp;quot;Make&amp;quot;&lt;/span&gt;
23:42:00: Elapsed time: 00:00.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The output says that g++ &lt;code&gt;cannot find -lGL&lt;/code&gt;. Well, something is missing. The flag &lt;code&gt;-lGL&lt;/code&gt; tells g++ to link OpenGL library, so OpenGL is missing in our case.&lt;/p&gt;
&lt;p&gt;The solution was to install Qt 5 OpenGL Library.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper in libQt5OpenGL-devel libQt5OpenGL5
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hope this helps someone else. :)&lt;/p&gt;</summary><category term="qt5"></category><category term="c"></category><category term="c++"></category><category term="opensuse"></category></entry><entry><title>Nunjucks eval tag</title><link href="https://blog.alexandrevicenzi.com/nunjucks-eval.html" rel="alternate"></link><published>2015-07-11T08:00:00-04:00</published><author><name>Alexandre Vicenzi</name></author><id>tag:blog.alexandrevicenzi.com,2015-07-11:nunjucks-eval.html</id><summary type="html">&lt;p&gt;This week I started to work in &lt;a href="https://github.com/alexandrevicenzi/gistfy"&gt;Gistfy project&lt;/a&gt; again, and one of the changes is replace &lt;a href="https://github.com/paularmstrong/swig"&gt;swig&lt;/a&gt; by &lt;a href="http://mozilla.github.io/nunjucks/"&gt;Nunjucks&lt;/a&gt;. &lt;a href="https://github.com/paularmstrong/swig/issues/628"&gt;swig is no longer maintained&lt;/a&gt;, and Nunjucks looks a really cool project.&lt;/p&gt;
&lt;p&gt;I like Nunjucks because it has a Django like template engine. In fact, Nunjucks is a &lt;a href="http://mozilla.github.io/nunjucks/templating.html#templating"&gt;port of Jinja2&lt;/a&gt;. &lt;a href="http://jinja.pocoo.org/docs/dev/"&gt;Jinja2&lt;/a&gt; is a Python template engine.&lt;/p&gt;
&lt;p&gt;Nunjucks is very simple to use and has a lot of filters and tags in it, if you're a Django user it will be very easy to create something with it. In fact, I created an &lt;em&gt;evil&lt;/em&gt; extension to allow me to eval some JS code.&lt;/p&gt;
&lt;p&gt;This all started because I needed to put the current year in my page. I could use JS in browser or use a variable and pass through render to do this. But no, I decided to eval the code using a template tag. Well, there's no tag for this, I think, so I built one.&lt;/p&gt;
&lt;p&gt;It's very simple to use the tag and looks like &lt;a href="http://mozilla.github.io/nunjucks/templating.html#set"&gt;set&lt;/a&gt; tag.&lt;/p&gt;
&lt;p&gt;In the server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;nunjucks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nunjucks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;njeval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nunjucks-eval&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;nunjucks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;autoescape&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;njeval&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And then in the view:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;eval&lt;/span&gt; &lt;span class="nv"&gt;year&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;new Date().getFullYear()&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;year&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can check the &lt;a href="https://github.com/alexandrevicenzi/nunjucks-eval"&gt;source code of nunjucks-eval&lt;/a&gt;, it's very simple and small.&lt;/p&gt;</summary><category term="nunjucks"></category><category term="eval"></category><category term="jinja2"></category><category term="NodeJS"></category></entry><entry><title>New version of Django-PJAX</title><link href="https://blog.alexandrevicenzi.com/new-version-django-pjax.html" rel="alternate"></link><published>2015-07-08T15:00:00-04:00</published><author><name>Alexandre Vicenzi</name></author><id>tag:blog.alexandrevicenzi.com,2015-07-08:new-version-django-pjax.html</id><summary type="html">&lt;p&gt;The Django-PJAX was discontinued by &lt;a href="http://jacobian.org/"&gt;Jacob Kaplan-Moss&lt;/a&gt;, the creator of this project. We at &lt;a href="https://www.eventials.com"&gt;Eventials&lt;/a&gt; need to use Django-PJAX, so we decided to keep this project up-to-date.&lt;/p&gt;
&lt;p&gt;We forked the original project to add a new feature, allow Django-PJAX to specify a container name. This is useful if you have more than one PJAX in the same template that points to the same view. For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;djpjax&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pjax&lt;/span&gt;

&lt;span class="nd"&gt;@pjax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pjax.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# This is the default template.&lt;/span&gt;
&lt;span class="nd"&gt;@pjax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pjax_inner.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;#pjax-inner-content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# This is the template for #pjax-inner-content.&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;my_view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;TemplateResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;template.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;my&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;context&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We also add compatibility with Python 3. This new version works on Python 2 and 3 and any version of Django after 1.3.&lt;/p&gt;
&lt;p&gt;You may be asking, is this a new project? No. It's the same. We owned the &lt;a href="https://pypi.python.org/pypi/django-pjax"&gt;original PyPi project&lt;/a&gt;, so you just need to run &lt;em&gt;pip install django-pjax --upgrade&lt;/em&gt; to use this new version.&lt;/p&gt;
&lt;p&gt;You can find the new version of Django-PJAX &lt;a href="https://github.com/eventials/django-pjax"&gt;here&lt;/a&gt;. Hope you like it.&lt;/p&gt;</summary><category term="django"></category><category term="pjax"></category><category term="jQuery"></category><category term="python"></category></entry></feed>