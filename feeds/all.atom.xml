<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Alexandre Vicenzi's Blog</title><link href="https://blog.alexandrevicenzi.com/" rel="alternate"></link><link href="https://blog.alexandrevicenzi.com/feeds/all.atom.xml" rel="self"></link><id>https://blog.alexandrevicenzi.com/</id><updated>2016-11-16T08:00:00-05:00</updated><entry><title>Flex 2.1</title><link href="https://blog.alexandrevicenzi.com/flex-pelican-theme-update-2-1.html" rel="alternate"></link><published>2016-11-16T08:00:00-05:00</published><updated>2016-11-16T08:00:00-05:00</updated><author><name>Alexandre Vicenzi</name></author><id>tag:blog.alexandrevicenzi.com,2016-11-16:/flex-pelican-theme-update-2-1.html</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex"&gt;Flex theme&lt;/a&gt; 2.1 comes with a feature that I was delaying for so long.
Flex 2.1 adds support for Google AdSense.&lt;/p&gt;
&lt;p&gt;If you choose wisely, ads are a way to win some money, but if not, you may loose your users due to excessive use of ads.&lt;/p&gt;
&lt;p&gt;Flex …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex"&gt;Flex theme&lt;/a&gt; 2.1 comes with a feature that I was delaying for so long.
Flex 2.1 adds support for Google AdSense.&lt;/p&gt;
&lt;p&gt;If you choose wisely, ads are a way to win some money, but if not, you may loose your users due to excessive use of ads.&lt;/p&gt;
&lt;p&gt;Flex has six places for ads. Google recommends up to 3 ads per page. There is ads page only, and banner that appears on all pages.
Below you can see how to enable ads in your pelican configuration file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;GOOGLE_ADSENSE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ca_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ca-pub-1234567890&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="c1"&gt;# Your AdSense ID&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;page_level_ads&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;          &lt;span class="c1"&gt;# Allow Page Level Ads (mobile)&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ads&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;aside&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1234561&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;          &lt;span class="c1"&gt;# Side bar banner (all pages)&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;main_menu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1234562&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="c1"&gt;# Banner before main menu (all pages)&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;index_top&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1234563&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="c1"&gt;# Banner after main menu (index only)&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;index_bottom&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1234564&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="c1"&gt;# Banner before footer (index only)&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;article_top&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1234565&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="c1"&gt;# Banner after article title (article only)&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;article_bottom&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1234566&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# Banner after article content (article only)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Version 2.1 also comes with new translations. You can see available translations &lt;a href="https://github.com/alexandrevicenzi/Flex/wiki/Translations"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hope you enjoy this version.&lt;/p&gt;</content><category term="pelican"></category><category term="python"></category><category term="theme"></category></entry><entry><title>Flex 2.0</title><link href="https://blog.alexandrevicenzi.com/flex-pelican-theme-update-2-0.html" rel="alternate"></link><published>2016-09-13T08:00:00-04:00</published><updated>2016-09-13T08:00:00-04:00</updated><author><name>Alexandre Vicenzi</name></author><id>tag:blog.alexandrevicenzi.com,2016-09-13:/flex-pelican-theme-update-2-0.html</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex"&gt;Flex theme&lt;/a&gt; 2.0 comes with new features.
In fact there are two new features.&lt;/p&gt;
&lt;p&gt;The biggest change is localization support.
Yes, Flex now can be translated into your language.
You can read about &lt;a href="https://github.com/alexandrevicenzi/Flex/wiki/Translations"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The biggest challege was to create a way to translate without breaking old versions.
If …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex"&gt;Flex theme&lt;/a&gt; 2.0 comes with new features.
In fact there are two new features.&lt;/p&gt;
&lt;p&gt;The biggest change is localization support.
Yes, Flex now can be translated into your language.
You can read about &lt;a href="https://github.com/alexandrevicenzi/Flex/wiki/Translations"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The biggest challege was to create a way to translate without breaking old versions.
If you use English it changes nothing for you.
But if you want to use translation you need to add new lines to your pelican configuration file.&lt;/p&gt;
&lt;p&gt;Here is a small example to use Flex in another language.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Enable i18n plugin, probably you already have some others here.&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;i18n_subsites&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# Enable Jinja2 i18n extension used to parse translations.&lt;/span&gt;
&lt;span class="n"&gt;JINJA_EXTENSIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;jinja2.ext.i18n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# Default theme language.&lt;/span&gt;
&lt;span class="n"&gt;I18N_TEMPLATES_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;en&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;# Your language.&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;de&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;OG_LOCALE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;de_DE&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;LOCALE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;de_DE&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Last but not least, Flex supports the feature "X minute read", similar &lt;a href="https://medium.com/"&gt;Medium&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hope you enjoy this version.&lt;/p&gt;</content><category term="pelican"></category><category term="python"></category><category term="theme"></category></entry><entry><title>Posting to Pushbullet with NodeMCU</title><link href="https://blog.alexandrevicenzi.com/nodemcu-pushbullet-notification.html" rel="alternate"></link><published>2016-08-24T08:00:00-04:00</published><updated>2016-08-24T08:00:00-04:00</updated><author><name>Alexandre Vicenzi</name></author><id>tag:blog.alexandrevicenzi.com,2016-08-24:/nodemcu-pushbullet-notification.html</id><summary type="html">&lt;p&gt;With &lt;a href="https://nodemcu.readthedocs.io/en/master/en/modules/http/"&gt;NodeMCU HTTP Module&lt;/a&gt; we can GET/POST/PUT/DELETE over HTTP(S), as well as customized requests. If you ever used any other programming language you know how easy is to make an HTTP request.&lt;/p&gt;
&lt;p&gt;Today, we're going to call &lt;a href="https://www.pushbullet.com"&gt;Pushbullet&lt;/a&gt; API. So, what's Pushbullet?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pushbullet bridges the gap …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;With &lt;a href="https://nodemcu.readthedocs.io/en/master/en/modules/http/"&gt;NodeMCU HTTP Module&lt;/a&gt; we can GET/POST/PUT/DELETE over HTTP(S), as well as customized requests. If you ever used any other programming language you know how easy is to make an HTTP request.&lt;/p&gt;
&lt;p&gt;Today, we're going to call &lt;a href="https://www.pushbullet.com"&gt;Pushbullet&lt;/a&gt; API. So, what's Pushbullet?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pushbullet bridges the gap between your phone, tablet, and computer, enabling them to work better together. From seeing your phone's notifications on your computer, to easily transferring links, files, and more between devices.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Pushbullet is a great tool to get notifications on your phone. Let's assume we have a fire sensor at home. If the fire sensor detects something, it would be good to be notified if we aren't at home. We can do this over Pushbullet or another platform.&lt;/p&gt;
&lt;p&gt;The sample code below shows how to send the current IP.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;-- your setup.&lt;/span&gt;
&lt;span class="n"&gt;PUSHBULLET_TOKEN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;WIFI_SSID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;WIFI_PASSWORD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;wifi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setmode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wifi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STATION&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;-- on connect send the current IP to pushbullet.&lt;/span&gt;
&lt;span class="n"&gt;wifi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eventMonReg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wifi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STA_GOTIP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wifi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://api.pushbullet.com/v2/pushes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s1"&gt;&amp;#39;Content-Type: application/json&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s1"&gt;Access-Token: &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;PUSHBULLET_TOKEN&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s1"&gt;&amp;#39;{&amp;quot;body&amp;quot;:&amp;quot;IP: &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;quot;, &amp;quot;title&amp;quot;:&amp;quot;ESP Connected&amp;quot;, &amp;quot;type&amp;quot;:&amp;quot;note&amp;quot;}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;-- print the response code. 200 if success.&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kr"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kr"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;-- configure wifi and connect.&lt;/span&gt;
&lt;span class="n"&gt;wifi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WIFI_SSID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WIFI_PASSWORD&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;wifi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is a very simple example but is good enough for testing purpose.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.pushbullet.com/"&gt;Pushbullet API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nodemcu.readthedocs.io/en/master/en/modules/http/"&gt;NodeMCU HTTP Module&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="lua"></category><category term="nodemcu"></category><category term="esp"></category><category term="pushbullet"></category></entry><entry><title>Make email permission required when signing in with Facebook</title><link href="https://blog.alexandrevicenzi.com/required-email-facebook-login.html" rel="alternate"></link><published>2016-08-21T08:00:00-04:00</published><updated>2016-08-21T08:00:00-04:00</updated><author><name>Alexandre Vicenzi</name></author><id>tag:blog.alexandrevicenzi.com,2016-08-21:/required-email-facebook-login.html</id><summary type="html">&lt;p&gt;If your software uses &lt;a href="https://developers.facebook.com/docs/facebook-login/overview"&gt;Facebook login&lt;/a&gt; you know that users can grant or decline &lt;a href="https://developers.facebook.com/docs/facebook-login/permissions/overview"&gt;permissions&lt;/a&gt;. The &lt;em&gt;public_profile&lt;/em&gt; is default and you can get basic info about the user, such as user's name for example.&lt;/p&gt;
&lt;p&gt;You can also request more permissions in the scope. One very useful is &lt;a href="https://developers.facebook.com/docs/facebook-login/permissions#reference-email"&gt;&lt;em&gt;email&lt;/em&gt;&lt;/a&gt; permission, which …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If your software uses &lt;a href="https://developers.facebook.com/docs/facebook-login/overview"&gt;Facebook login&lt;/a&gt; you know that users can grant or decline &lt;a href="https://developers.facebook.com/docs/facebook-login/permissions/overview"&gt;permissions&lt;/a&gt;. The &lt;em&gt;public_profile&lt;/em&gt; is default and you can get basic info about the user, such as user's name for example.&lt;/p&gt;
&lt;p&gt;You can also request more permissions in the scope. One very useful is &lt;a href="https://developers.facebook.com/docs/facebook-login/permissions#reference-email"&gt;&lt;em&gt;email&lt;/em&gt;&lt;/a&gt; permission, which gives you access to user primary email. The thing about email is, the user doesn't need to allow an app to access this data.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Facebook permission declined" class="img-center" src="images/facebook-permissions-declined.png"&gt;&lt;/p&gt;
&lt;p&gt;As you can see, any additional permission can be declined by users. If you want the email, you can have another problem:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Even if you request the email permission it is not guaranteed you will get an email address. For example, if someone signed up for Facebook with a phone number instead of an email address, the email field may be empty.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developers.facebook.com/docs/facebook-login/permissions#reference-email"&gt;Read more&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this case, you will need to deal with this scenario in another way. The best solution is to ask user email after signup. But today we want to make the email (or any other permission) required.&lt;/p&gt;
&lt;p&gt;The trick is, if the user declines some permission, you can ask it again. You can explain why some permission is required, and then redirect the user to Facebook again.&lt;/p&gt;
&lt;p&gt;For example, the URL below open the dialog above, requesting &lt;em&gt;public_profile&lt;/em&gt; and &lt;em&gt;email&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#"&gt;https://www.facebook.com/dialog/oauth?scope=email&amp;amp;redirect_uri=http://localhost:8888/login&amp;amp;response_type=code&amp;amp;client_id=1234567890&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If the user declines some permission we can ask it again using the URL below.&lt;/p&gt;
&lt;p&gt;&lt;a href="#"&gt;https://www.facebook.com/dialog/oauth?auth_type=rerequest&amp;amp;scope=email&amp;amp;redirect_uri=http://localhost:8888/login&amp;amp;response_type=code&amp;amp;client_id=1234567890&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And the result will be as below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Facebook email retry" class="img-center" src="images/facebook-email-retry.png"&gt;&lt;/p&gt;
&lt;p&gt;As you can see, the user can't proceed without granting permission to email. This is done by &lt;code&gt;auth_type=rerequest&lt;/code&gt; parameter, which requests the permission again.&lt;/p&gt;
&lt;p&gt;In practice, it will work like the example below. I'm using &lt;a href="http://www.tornadoweb.org/en/stable/"&gt;Tornado&lt;/a&gt; 4.4, but you can do this in most languages that have support for Facebook OAuth.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tornado.auth&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tornado.ioloop&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tornado.web&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;base64&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;b64encode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b64decode&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tornado.concurrent&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;return_future&lt;/span&gt;

&lt;span class="n"&gt;FACEBOOK_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;YOUR ID HERE&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;FACEBOOK_SECRET&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;YOUR SECRET HERE&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;FACEBOOK_REDIRECT_URI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://localhost:8888/login&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basicConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%(levelname)s&lt;/span&gt;&lt;span class="s1"&gt; - &lt;/span&gt;&lt;span class="si"&gt;%(asctime)s&lt;/span&gt;&lt;span class="s1"&gt; - &lt;/span&gt;&lt;span class="si"&gt;%(module)s&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="si"&gt;%(message)s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;logger&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getLogger&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;FacebookOAuthException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tornado&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_cookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b64decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;User logged in.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_cookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;. Your primary email on Facebook is &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;.&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b64decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;. Your account has no email associated.&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;User not logged in.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/login&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;FacebookLoginHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tornado&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tornado&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FacebookGraphMixin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="nd"&gt;@tornado.gen.coroutine&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="c1"&gt;# User logged in. get user data.&lt;/span&gt;
            &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Getting user data...&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_authenticated_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;redirect_uri&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;FACEBOOK_REDIRECT_URI&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                     &lt;span class="n"&gt;client_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;FACEBOOK_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                     &lt;span class="n"&gt;client_secret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;FACEBOOK_SECRET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                     &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                                                     &lt;span class="n"&gt;extra_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;permissions&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

            &lt;span class="c1"&gt;# Check if user allow us to get his email.&lt;/span&gt;
            &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Validating user permissions...&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;permissions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;permissions&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
            &lt;span class="n"&gt;permission&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;permissions&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;permission&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;permission&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;granted_access&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;permission&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;status&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;granted&amp;#39;&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="c1"&gt;# Opss!&lt;/span&gt;
                &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;FacebookOAuthException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Missing permission from facebook request.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;granted_access&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="c1"&gt;# Everything is OK. move on.&lt;/span&gt;
                &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Access granted.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_on_auth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="c1"&gt;# If user don&amp;#39;t grant access to email, keep it on facebook login page until he allow it.&lt;/span&gt;
                &lt;span class="c1"&gt;# We need to pass &amp;#39;auth_type&amp;#39; as &amp;#39;rerequest&amp;#39; for this work.&lt;/span&gt;
                &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Access declined. Re-request...&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;authorize_redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;redirect_uri&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;FACEBOOK_REDIRECT_URI&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="n"&gt;client_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;FACEBOOK_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                              &lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                                              &lt;span class="n"&gt;extra_params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;auth_type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rerequest&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# User not logged in, request authorization.&lt;/span&gt;
            &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Requesting user authorization...&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;authorize_redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;redirect_uri&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;FACEBOOK_REDIRECT_URI&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                          &lt;span class="n"&gt;client_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;FACEBOOK_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                          &lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="nd"&gt;@return_future&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_on_auth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;facebook_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# TODO: Use secure cookie, persist somewhere, but don&amp;#39;t do this in prodution.&lt;/span&gt;
        &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;facebook_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;facebook_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_cookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b64encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_cookie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b64encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="c1"&gt;# Logged in. go back to home.&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;make_app&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;tornado&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MainHandler&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/login&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FacebookLoginHandler&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;make_app&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8888&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Server running at http://localhost:8888/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;tornado&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ioloop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IOLoop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.facebook.com/docs/facebook-login/permissions/overview"&gt;Permissions with Facebook Login&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/23799185/how-to-make-email-permission-required-when-logging-in-signing-up-a-user-using-th"&gt;How to make email permission required when logging in/signing up a user using the FB login?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="oauth"></category><category term="python"></category><category term="tornado"></category><category term="facebook"></category><category term="social"></category></entry><entry><title>Qt Designer error: cannot find -lGL</title><link href="https://blog.alexandrevicenzi.com/qt-designer-compile-error.html" rel="alternate"></link><published>2016-07-31T08:00:00-04:00</published><updated>2016-07-31T08:00:00-04:00</updated><author><name>Alexandre Vicenzi</name></author><id>tag:blog.alexandrevicenzi.com,2016-07-31:/qt-designer-compile-error.html</id><summary type="html">&lt;p&gt;After upgrading to openSUSE Tumbleweed I got an error while trying to compile a Qt project as shown below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:42:00: Running steps &lt;span class="k"&gt;for&lt;/span&gt; project qt-quick...
&lt;span class="m"&gt;23&lt;/span&gt;:42:00: Configuration unchanged, skipping qmake step.
&lt;span class="m"&gt;23&lt;/span&gt;:42:00: Starting: &lt;span class="s2"&gt;&amp;quot;/usr/bin/make&amp;quot;&lt;/span&gt; 
/home/alexandre/Qt/5.7/gcc_64/bin/rcc …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;After upgrading to openSUSE Tumbleweed I got an error while trying to compile a Qt project as shown below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:42:00: Running steps &lt;span class="k"&gt;for&lt;/span&gt; project qt-quick...
&lt;span class="m"&gt;23&lt;/span&gt;:42:00: Configuration unchanged, skipping qmake step.
&lt;span class="m"&gt;23&lt;/span&gt;:42:00: Starting: &lt;span class="s2"&gt;&amp;quot;/usr/bin/make&amp;quot;&lt;/span&gt; 
/home/alexandre/Qt/5.7/gcc_64/bin/rcc -name qml ../qt-quick/qml.qrc -o qrc_qml.cpp
g++ -c -pipe -g -std&lt;span class="o"&gt;=&lt;/span&gt;gnu++11 -Wall -W -D_REENTRANT -fPIC -DQT_QML_DEBUG -DQT_QUICK_LIB -DQT_GUI_LIB -DQT_QML_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -I../qt-quick -I. -I../../Qt/5.7/gcc_64/include -I../../Qt/5.7/gcc_64/include/QtQuick -I../../Qt/5.7/gcc_64/include/QtGui -I../../Qt/5.7/gcc_64/include/QtQml -I../../Qt/5.7/gcc_64/include/QtNetwork -I../../Qt/5.7/gcc_64/include/QtCore -I. -I../../Qt/5.7/gcc_64/mkspecs/linux-g++ -o qrc_qml.o qrc_qml.cpp
g++ -Wl,-rpath,/home/alexandre/Qt/5.7/gcc_64/lib -o qt-quick main.o qrc_qml.o   -L/home/alexandre/Qt/5.7/gcc_64/lib -lQt5Quick -L/usr/lib64 -lQt5Gui -lQt5Qml -lQt5Network -lQt5Core -lGL -lpthread 
/usr/lib64/gcc/x86_64-suse-linux/6/../../../../x86_64-suse-linux/bin/ld: cannot find -lGL
collect2: error: ld returned &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; status
make: *** &lt;span class="o"&gt;[&lt;/span&gt;Makefile:210: qt-quick&lt;span class="o"&gt;]&lt;/span&gt; Error &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="m"&gt;23&lt;/span&gt;:42:00: The process &lt;span class="s2"&gt;&amp;quot;/usr/bin/make&amp;quot;&lt;/span&gt; exited with code &lt;span class="m"&gt;2&lt;/span&gt;.
Error &lt;span class="k"&gt;while&lt;/span&gt; building/deploying project qt-quick &lt;span class="o"&gt;(&lt;/span&gt;kit: Desktop Qt &lt;span class="m"&gt;5&lt;/span&gt;.7.0 GCC 64bit&lt;span class="o"&gt;)&lt;/span&gt;
When executing step &lt;span class="s2"&gt;&amp;quot;Make&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;23&lt;/span&gt;:42:00: Elapsed time: &lt;span class="m"&gt;00&lt;/span&gt;:00.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The output says that g++ &lt;code&gt;cannot find -lGL&lt;/code&gt;. Well, something is missing. The flag &lt;code&gt;-lGL&lt;/code&gt; tells g++ to link OpenGL library, so OpenGL is missing in our case.&lt;/p&gt;
&lt;p&gt;The solution was to install Qt 5 OpenGL Library.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper in libQt5OpenGL-devel libQt5OpenGL5
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hope this helps someone else. :)&lt;/p&gt;</content><category term="qt5"></category><category term="c"></category><category term="c++"></category><category term="opensuse"></category></entry><entry><title>How to use OLED display with Banana Pi</title><link href="https://blog.alexandrevicenzi.com/oled-display-i2c-with-bananapi.html" rel="alternate"></link><published>2016-07-25T08:00:00-04:00</published><updated>2016-07-25T08:00:00-04:00</updated><author><name>Alexandre Vicenzi</name></author><id>tag:blog.alexandrevicenzi.com,2016-07-25:/oled-display-i2c-with-bananapi.html</id><summary type="html">&lt;p&gt;Today we're going to connect an OLED display on Banana Pi/Banana Pro throught I²C. These displays are very small, but very readable due to the high contrast.&lt;/p&gt;
&lt;p&gt;&lt;img alt="OLED Display" class="img-center" src="images/oled.png"&gt;&lt;/p&gt;
&lt;p&gt;In this example I will use a 128x64 OLED display based on SSD1306 controller. You can find models that use &lt;a href="https://en.wikipedia.org/wiki/I%C2%B2C"&gt;I²C&lt;/a&gt; or …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today we're going to connect an OLED display on Banana Pi/Banana Pro throught I²C. These displays are very small, but very readable due to the high contrast.&lt;/p&gt;
&lt;p&gt;&lt;img alt="OLED Display" class="img-center" src="images/oled.png"&gt;&lt;/p&gt;
&lt;p&gt;In this example I will use a 128x64 OLED display based on SSD1306 controller. You can find models that use &lt;a href="https://en.wikipedia.org/wiki/I%C2%B2C"&gt;I²C&lt;/a&gt; or &lt;a href="https://en.wikipedia.org/wiki/Serial_Peripheral_Interface_Bus"&gt;SPI&lt;/a&gt; as communication interface. SPI is generally faster than I2C but uses more pins.&lt;/p&gt;
&lt;h2&gt;Connecting the module&lt;/h2&gt;
&lt;p&gt;The table bellow shows how to connect a display that uses I²C interface.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;OLED Pin&lt;/th&gt;
&lt;th align="center"&gt;BananaPi/Pro Pin&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;VCC&lt;/td&gt;
&lt;td align="center"&gt;1 (3V3)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;GND&lt;/td&gt;
&lt;td align="center"&gt;6 (GND)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;SCL (or CLK)&lt;/td&gt;
&lt;td align="center"&gt;5 (SCL)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;SDA (or Data)&lt;/td&gt;
&lt;td align="center"&gt;3 (SDA)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;RST&lt;/td&gt;
&lt;td align="center"&gt;24 (GPIO8)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Dependencies&lt;/h2&gt;
&lt;p&gt;If you're using your display for the first time, you will need to install some dependencies. If you're using ArchLinux you can run the following commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pacman -Syu
sudo pacman-db-upgrade
sudo trust extract-compat
sudo pacman -S python python-pip base-devel i2c-tools python-imaging lm_sensors libjpeg-turbo freetype2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you're on Debian-based distros you can run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get update
sudo apt-get install build-essential python-dev python-pip python-imaging python-smbus libfreetype6-dev
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After this you can install Python PIL or Pillow. PIL is the Python Imaging Library. Pillow is a Fork of PIL and it's the better choice because it works with Python 3+.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pip install Pillow
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;First, clone the version of RPi.GPIO from LeMaker into your home folder.
If you have a Banana Pi you need to clone &lt;code&gt;bananapi&lt;/code&gt; branch:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/LeMaker/RPi.GPIO_BP.git -b bananapi &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;cd&lt;/span&gt; RPi.GPIO_BP
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you have a Banana Pro you need to clone &lt;code&gt;bananapro&lt;/code&gt; branch:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/LeMaker/RPi.GPIO_BP.git -b bananapro &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;cd&lt;/span&gt; RPi.GPIO_BP
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then run &lt;code&gt;sudo python setup.py install&lt;/code&gt; to install this library.&lt;/p&gt;
&lt;p&gt;After, clone from Adafruit the library to use GPIO into your home folder:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/Adafruit/Adafruit_Python_GPIO.git &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;cd&lt;/span&gt; Adafruit_Python_GPIO
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Before install, we need to hack the code to get it working on BananaPi. Open &lt;code&gt;Adafruit_GPIO/GPIO.py&lt;/code&gt; with your text editor, find &lt;code&gt;get_platform_gpio&lt;/code&gt; function and change the code to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_platform_gpio&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;keywords&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;RPi.GPIO&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;RPiGPIOAdapter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RPi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;keywords&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then run &lt;code&gt;sudo python setup.py install&lt;/code&gt; to install this library.&lt;/p&gt;
&lt;p&gt;Finally, clone the Adafruit library into your home folder to use SSD1306-based OLED displays:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/Adafruit/Adafruit_Python_SSD1306.git &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;cd&lt;/span&gt; Adafruit_Python_SSD1306 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run &lt;code&gt;sudo python setup.py install&lt;/code&gt; to install this library.&lt;/p&gt;
&lt;h2&gt;Code example&lt;/h2&gt;
&lt;p&gt;Copy the code below to your home folder (or elsewhere) give a name to you file like &lt;code&gt;oled.py&lt;/code&gt; and run &lt;code&gt;sudo python oled.py&lt;/code&gt; to see the result.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;Adafruit_SSD1306&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ImageFont&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ImageDraw&lt;/span&gt;

&lt;span class="n"&gt;RST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;

&lt;span class="c1"&gt;# 128x64 display with hardware I2C:&lt;/span&gt;
&lt;span class="n"&gt;disp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Adafruit_SSD1306&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SSD1306_128_64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rst&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;RST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i2c_bus&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# initialize library.&lt;/span&gt;
&lt;span class="n"&gt;disp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;disp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;
&lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;disp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;

&lt;span class="c1"&gt;# clear display.&lt;/span&gt;
&lt;span class="n"&gt;disp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;disp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# create image buffer.&lt;/span&gt;
&lt;span class="c1"&gt;# use mode &amp;#39;1&amp;#39; for 1-bit color.&lt;/span&gt;
&lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# load default font.&lt;/span&gt;
&lt;span class="n"&gt;font&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageFont&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_default&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;draw&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageDraw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# draw text line.&lt;/span&gt;
&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;alexandrevicenzi.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# draw line separator.&lt;/span&gt;
&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# draw another text line.&lt;/span&gt;
&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;OLED Display example&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# draw the image buffer.&lt;/span&gt;
&lt;span class="n"&gt;disp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;disp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This code will write some text and draw a line to the display as shown bellow.&lt;/p&gt;
&lt;p&gt;&lt;a href="images/BananaPi-OLED-Big.jpg"&gt;&lt;img alt="Banana Pi OLED Display" class="img-center" src="images/BananaPi-OLED-Small.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can find more examples inside &lt;strong&gt;Adafruit_Python_SSD1306&lt;/strong&gt; library. But you may need to change the display initialization to match your device. A good example is how to draw an image on OLED displays.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Adafruit OLED Cat" class="img-center" src="images/OLED_cat.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://learn.adafruit.com/ssd1306-oled-displays-with-raspberry-pi-and-beaglebone-black" target="_blank"&gt;SSD1306 OLED Displays with Raspberry Pi and BeagleBone Black&lt;/a&gt;&lt;/p&gt;</content><category term="bananapi"></category><category term="display"></category><category term="python"></category><category term="gpio"></category><category term="i2c"></category><category term="oled"></category></entry><entry><title>Flex 1.2.0</title><link href="https://blog.alexandrevicenzi.com/flex-pelican-theme-update-1-2-0.html" rel="alternate"></link><published>2016-06-10T08:00:00-04:00</published><updated>2016-06-10T08:00:00-04:00</updated><author><name>Alexandre Vicenzi</name></author><id>tag:blog.alexandrevicenzi.com,2016-06-10:/flex-pelican-theme-update-1-2-0.html</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex"&gt;Flex theme&lt;/a&gt; received some new features. Version 1.2.0 include new features and some updates.&lt;/p&gt;
&lt;p&gt;For developers there are new color styles for your code. For general purpose there is RUM support, related posts and browser color configuration.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex/issues/31"&gt;Update font-awesome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex/pull/34"&gt;Added browser color configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex/pull/27"&gt;Related posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex/issues/38"&gt;More Pygments Styles …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex"&gt;Flex theme&lt;/a&gt; received some new features. Version 1.2.0 include new features and some updates.&lt;/p&gt;
&lt;p&gt;For developers there are new color styles for your code. For general purpose there is RUM support, related posts and browser color configuration.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex/issues/31"&gt;Update font-awesome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex/pull/34"&gt;Added browser color configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex/pull/27"&gt;Related posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex/issues/38"&gt;More Pygments Styles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex/issues/16"&gt;Add StatusCake RUM support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you need help or want to report a bug, please open an &lt;a href="https://github.com/alexandrevicenzi/Flex/issues"&gt;issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hope you enjoy this theme.&lt;/p&gt;</content><category term="pelican"></category><category term="python"></category><category term="theme"></category></entry><entry><title>Flex 1.1.1</title><link href="https://blog.alexandrevicenzi.com/flex-pelican-theme-update-1-1-1.html" rel="alternate"></link><published>2016-02-27T08:00:00-05:00</published><updated>2016-02-27T08:00:00-05:00</updated><author><name>Alexandre Vicenzi</name></author><id>tag:blog.alexandrevicenzi.com,2016-02-27:/flex-pelican-theme-update-1-1-1.html</id><summary type="html">&lt;p&gt;Today, &lt;a href="https://github.com/alexandrevicenzi/Flex"&gt;Flex theme&lt;/a&gt; received a small update.&lt;/p&gt;
&lt;p&gt;Some bugs are now fixed. I think the most important fixes are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex/issues/21"&gt;Bug in CSS with placement of "Newer Posts" button&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex/issues/14"&gt;Posts preview on main page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hope you enjoy this theme.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today, &lt;a href="https://github.com/alexandrevicenzi/Flex"&gt;Flex theme&lt;/a&gt; received a small update.&lt;/p&gt;
&lt;p&gt;Some bugs are now fixed. I think the most important fixes are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex/issues/21"&gt;Bug in CSS with placement of "Newer Posts" button&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexandrevicenzi/Flex/issues/14"&gt;Posts preview on main page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hope you enjoy this theme.&lt;/p&gt;</content><category term="pelican"></category><category term="python"></category><category term="theme"></category></entry><entry><title>Code once share everywhere</title><link href="https://blog.alexandrevicenzi.com/code-onde-share-everywhere.html" rel="alternate"></link><published>2016-02-25T08:00:00-05:00</published><updated>2016-02-25T08:00:00-05:00</updated><author><name>Alexandre Vicenzi</name></author><id>tag:blog.alexandrevicenzi.com,2016-02-25:/code-onde-share-everywhere.html</id><summary type="html">&lt;p&gt;&lt;a href="https://www.gistfy.com"&gt;Gistfy&lt;/a&gt;, the easiest way to create embeddable code snippets from your GitHub and Bitbucket, just got a lot of updates in the last version.&lt;/p&gt;
&lt;p&gt;Basically, it was almost rewritten. Some dependencies from the old version are dead. &lt;a href="https://github.com/paularmstrong/swig"&gt;Swig&lt;/a&gt; is officialy dead, and AngularJS, well, it's not dead, but it's migrating …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://www.gistfy.com"&gt;Gistfy&lt;/a&gt;, the easiest way to create embeddable code snippets from your GitHub and Bitbucket, just got a lot of updates in the last version.&lt;/p&gt;
&lt;p&gt;Basically, it was almost rewritten. Some dependencies from the old version are dead. &lt;a href="https://github.com/paularmstrong/swig"&gt;Swig&lt;/a&gt; is officialy dead, and AngularJS, well, it's not dead, but it's migrating to Angular 2, so it was more easy to remove it.&lt;/p&gt;
&lt;p&gt;In this new version some anoying bugs were fixed. You can read more about &lt;a href="https://github.com/alexandrevicenzi/gistfy/blob/master/CHANGELOG.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Things got a little bit easy when you need to share your code. Now, you just need to paste the full url of your GitHub or Bitbucket repository. For example &lt;a href="https://github.com/alexandrevicenzi/gistfy/blob/master/src/gistfy.js" target="_blank"&gt;https://github.com/alexandrevicenzi/gistfy/blob/master/src/gistfy.js&lt;/a&gt;, this url you can grab from your browser address bar. Give it a try, click in the link to open on GitHub.&lt;/p&gt;
&lt;p&gt;You can always use &lt;a href="https://github.com/alexandrevicenzi/gistfy"&gt;Gistfy&lt;/a&gt; from &lt;a href="https://www.gistfy.com"&gt;gistfy.com&lt;/a&gt;, but if you want to host your own version it got easy to deploy it on &lt;a href="https://www.heroku.com/"&gt;Heroku&lt;/a&gt; with &lt;a href="https://blog.heroku.com/archives/2014/8/7/heroku-button"&gt;Heroku Button&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://heroku.com/deploy?template=https://github.com/alexandrevicenzi/gistfy"&gt;&lt;img alt="Deploy" src="https://www.herokucdn.com/deploy/button.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The last and not the least, now you have more syle options. You can check it &lt;a href="https://www.gistfy.com/examples.html"&gt;here&lt;/a&gt;. The new ones are Android Studio, Arduino, CodePen, Visual Studio and Xcode.&lt;/p&gt;
&lt;p&gt;Feel free to request something.&lt;/p&gt;</content><category term="nodejs"></category><category term="code"></category><category term="github"></category><category term="bitbucket"></category><category term="snippets"></category></entry><entry><title>New version of Flex: The responsive Pelican theme</title><link href="https://blog.alexandrevicenzi.com/flex-pelican-theme-update-1-1.html" rel="alternate"></link><published>2015-10-07T08:00:00-04:00</published><updated>2015-10-07T08:00:00-04:00</updated><author><name>Alexandre Vicenzi</name></author><id>tag:blog.alexandrevicenzi.com,2015-10-07:/flex-pelican-theme-update-1-1.html</id><summary type="html">&lt;p&gt;I've made the &lt;a href="https://github.com/alexandrevicenzi/Flex"&gt;Flex theme&lt;/a&gt; a time ago. For my surprise, many people are using it. I feel thankful for this.&lt;/p&gt;
&lt;p&gt;So, after some new blogs with this theme, I got issues and PRs on GitHub from these new users. This weekend I had some free time and I release …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've made the &lt;a href="https://github.com/alexandrevicenzi/Flex"&gt;Flex theme&lt;/a&gt; a time ago. For my surprise, many people are using it. I feel thankful for this.&lt;/p&gt;
&lt;p&gt;So, after some new blogs with this theme, I got issues and PRs on GitHub from these new users. This weekend I had some free time and I release the &lt;a href="https://github.com/alexandrevicenzi/Flex/releases/tag/v1.1"&gt;second version&lt;/a&gt; of Flex (aka v1.1).&lt;/p&gt;
&lt;p&gt;This new version doesn't include nothing so special, just some bug fix and a new setting to allow custom CSS stylesheets.&lt;/p&gt;
&lt;p&gt;The new custom setting can be used like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;EXTRA_PATH_METADATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;extra/custom.css&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;static/custom.css&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;CUSTOM_CSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;static/custom.css&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I would like to thank all who helped in this new version.&lt;/p&gt;</content><category term="pelican"></category><category term="python"></category><category term="theme"></category></entry><entry><title>Flex: Responsive Pelican theme</title><link href="https://blog.alexandrevicenzi.com/flex-pelican-theme.html" rel="alternate"></link><published>2015-07-22T08:00:00-04:00</published><updated>2015-07-22T08:00:00-04:00</updated><author><name>Alexandre Vicenzi</name></author><id>tag:blog.alexandrevicenzi.com,2015-07-22:/flex-pelican-theme.html</id><summary type="html">&lt;p&gt;I just start a new fresh blog using &lt;a href="http://getpelican.com"&gt;Pelican&lt;/a&gt;. Sometimes choosing a theme for a new site is something difficult that takes time.&lt;/p&gt;
&lt;p&gt;In the Pelican &lt;a href="http://www.pelicanthemes.com/"&gt;theme gallery&lt;/a&gt;, I couldn't find anything that I really liked to feet all my needs. So in the first time of the history, I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I just start a new fresh blog using &lt;a href="http://getpelican.com"&gt;Pelican&lt;/a&gt;. Sometimes choosing a theme for a new site is something difficult that takes time.&lt;/p&gt;
&lt;p&gt;In the Pelican &lt;a href="http://www.pelicanthemes.com/"&gt;theme gallery&lt;/a&gt;, I couldn't find anything that I really liked to feet all my needs. So in the first time of the history, I choose to create my own theme. I never did this before.&lt;/p&gt;
&lt;p&gt;Creating a theme for Pelican is quite easy, unlike Wordpress. You can take a look in the &lt;a href="https://github.com/alexandrevicenzi/Flex"&gt;Source Code of Flex&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But how Flex looks like? Well, you can see &lt;a href="images/flex-screenshot.png"&gt;this screenshot&lt;/a&gt;, but you already know how it looks like, you're looking at it. :D&lt;/p&gt;
&lt;p&gt;I really care about SEO and integrations with Facebook, Google Plus and other social networks, so this theme offers some features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mobile First&lt;/li&gt;
&lt;li&gt;Responsive&lt;/li&gt;
&lt;li&gt;Semantic&lt;/li&gt;
&lt;li&gt;SEO Best Practices&lt;/li&gt;
&lt;li&gt;Open Graph&lt;/li&gt;
&lt;li&gt;Rich Snippets (JSON-LD)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Maybe these features are not fully optimized, but I'll improve.&lt;/p&gt;
&lt;p&gt;Flex also offers integrations with multiple services.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can easyly integrate with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AddThis&lt;/li&gt;
&lt;li&gt;Disqus&lt;/li&gt;
&lt;li&gt;Google Analytics&lt;/li&gt;
&lt;li&gt;Google Tag Manager&lt;/li&gt;
&lt;li&gt;StatusCake&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Flex is a theme built by a developer for developers, but of course, you can use for any purpose. In this scenario, Flex is able to create good styles for coding, outputs and samples.&lt;/p&gt;
&lt;p&gt;If you need to show some program output you can use &lt;code&gt;samp&lt;/code&gt; tag to look like this:&lt;/p&gt;
&lt;p&gt;&lt;samp&gt;Done: Processed 4 articles, 0 drafts, 2 pages and 0 hidden pages in 0.22 seconds.&lt;/samp&gt;&lt;/p&gt;
&lt;p&gt;Or if you want multiple lines:&lt;/p&gt;
&lt;p&gt;&lt;samp&gt;
             total       used       free     shared    buffers     cached
Mem:          5866       4674       1192        386          0       2404
-/+ buffers/cache:       2269       3596
Swap:        20480       1267      19213
&lt;/samp&gt;&lt;/p&gt;
&lt;p&gt;If you like to share code snippets, you can take advantage of &lt;a href="http://pygments.org/"&gt;Pygments&lt;/a&gt; syntax highlighting:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// Foo&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The code block looks like GitHub’s colors.&lt;/p&gt;
&lt;p&gt;You can add tables too:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Computer&lt;/td&gt;
&lt;td&gt;$1600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Phone&lt;/td&gt;
&lt;td&gt;$12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pipe&lt;/td&gt;
&lt;td&gt;$1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;and how heading looks like?&lt;/p&gt;
&lt;h1&gt;This is heading 1&lt;/h1&gt;
&lt;h2&gt;This is heading 2&lt;/h2&gt;
&lt;h3&gt;This is heading 3&lt;/h3&gt;
&lt;h4&gt;This is heading 4&lt;/h4&gt;
&lt;h5&gt;This is heading 5&lt;/h5&gt;
&lt;h6&gt;This is heading 6&lt;/h6&gt;
&lt;p&gt;This examples are in Markdown. I'm not sure how it will look using reStructuredText. Keep in mind that Markdown allows you to add HTML tags. If you can create the same HTML syntax produced by Markdown using reStructuredText it will work.&lt;/p&gt;
&lt;p&gt;You can take a look in the &lt;a href="https://raw.githubusercontent.com/alexandrevicenzi/blog/master/content/News/flex-pelican-theme.md"&gt;source code of this page&lt;/a&gt; to know how to create rich examples.&lt;/p&gt;
&lt;p&gt;Flex is my first attempt creating themes and there's no IE testing yet. You can check the &lt;a href="https://github.com/alexandrevicenzi/flex"&gt;sources here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As soon as possible I will add this project to Pelican gallery.&lt;/p&gt;
&lt;p&gt;Drop a comment if you like this theme, or &lt;a href="https://github.com/alexandrevicenzi/Flex/issues"&gt;open an issue&lt;/a&gt; if you need a feature or found a bug.&lt;/p&gt;</content><category term="pelican"></category><category term="python"></category><category term="theme"></category></entry><entry><title>Nunjucks eval tag</title><link href="https://blog.alexandrevicenzi.com/nunjucks-eval.html" rel="alternate"></link><published>2015-07-11T08:00:00-04:00</published><updated>2015-07-11T08:00:00-04:00</updated><author><name>Alexandre Vicenzi</name></author><id>tag:blog.alexandrevicenzi.com,2015-07-11:/nunjucks-eval.html</id><summary type="html">&lt;p&gt;This week I started to work in &lt;a href="https://github.com/alexandrevicenzi/gistfy"&gt;Gistfy project&lt;/a&gt; again, and one of the changes is replace &lt;a href="https://github.com/paularmstrong/swig"&gt;swig&lt;/a&gt; by &lt;a href="http://mozilla.github.io/nunjucks/"&gt;Nunjucks&lt;/a&gt;. &lt;a href="https://github.com/paularmstrong/swig/issues/628"&gt;swig is no longer maintained&lt;/a&gt;, and Nunjucks looks a really cool project.&lt;/p&gt;
&lt;p&gt;I like Nunjucks because it has a Django like template engine. In fact, Nunjucks is a &lt;a href="http://mozilla.github.io/nunjucks/templating.html#templating"&gt;port of …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;This week I started to work in &lt;a href="https://github.com/alexandrevicenzi/gistfy"&gt;Gistfy project&lt;/a&gt; again, and one of the changes is replace &lt;a href="https://github.com/paularmstrong/swig"&gt;swig&lt;/a&gt; by &lt;a href="http://mozilla.github.io/nunjucks/"&gt;Nunjucks&lt;/a&gt;. &lt;a href="https://github.com/paularmstrong/swig/issues/628"&gt;swig is no longer maintained&lt;/a&gt;, and Nunjucks looks a really cool project.&lt;/p&gt;
&lt;p&gt;I like Nunjucks because it has a Django like template engine. In fact, Nunjucks is a &lt;a href="http://mozilla.github.io/nunjucks/templating.html#templating"&gt;port of Jinja2&lt;/a&gt;. &lt;a href="http://jinja.pocoo.org/docs/dev/"&gt;Jinja2&lt;/a&gt; is a Python template engine.&lt;/p&gt;
&lt;p&gt;Nunjucks is very simple to use and has a lot of filters and tags in it, if you're a Django user it will be very easy to create something with it. In fact, I created an &lt;em&gt;evil&lt;/em&gt; extension to allow me to eval some JS code.&lt;/p&gt;
&lt;p&gt;This all started because I needed to put the current year in my page. I could use JS in browser or use a variable and pass through render to do this. But no, I decided to eval the code using a template tag. Well, there's no tag for this, I think, so I built one.&lt;/p&gt;
&lt;p&gt;It's very simple to use the tag and looks like &lt;a href="http://mozilla.github.io/nunjucks/templating.html#set"&gt;set&lt;/a&gt; tag.&lt;/p&gt;
&lt;p&gt;In the server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;nunjucks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nunjucks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;njeval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nunjucks-eval&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;nunjucks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;autoescape&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;njeval&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And then in the view:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;eval&lt;/span&gt; &lt;span class="nv"&gt;year&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;new Date().getFullYear()&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;year&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can check the &lt;a href="https://github.com/alexandrevicenzi/nunjucks-eval"&gt;source code of nunjucks-eval&lt;/a&gt;, it's very simple and small.&lt;/p&gt;</content><category term="nunjucks"></category><category term="eval"></category><category term="jinja2"></category><category term="NodeJS"></category></entry><entry><title>New version of Django-PJAX</title><link href="https://blog.alexandrevicenzi.com/new-version-django-pjax.html" rel="alternate"></link><published>2015-07-08T15:00:00-04:00</published><updated>2015-07-08T15:00:00-04:00</updated><author><name>Alexandre Vicenzi</name></author><id>tag:blog.alexandrevicenzi.com,2015-07-08:/new-version-django-pjax.html</id><summary type="html">&lt;p&gt;The Django-PJAX was discontinued by &lt;a href="http://jacobian.org/"&gt;Jacob Kaplan-Moss&lt;/a&gt;, the creator of this project. We at &lt;a href="https://www.eventials.com"&gt;Eventials&lt;/a&gt; need to use Django-PJAX, so we decided to keep this project up-to-date.&lt;/p&gt;
&lt;p&gt;We forked the original project to add a new feature, allow Django-PJAX to specify a container name. This is useful if you have …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The Django-PJAX was discontinued by &lt;a href="http://jacobian.org/"&gt;Jacob Kaplan-Moss&lt;/a&gt;, the creator of this project. We at &lt;a href="https://www.eventials.com"&gt;Eventials&lt;/a&gt; need to use Django-PJAX, so we decided to keep this project up-to-date.&lt;/p&gt;
&lt;p&gt;We forked the original project to add a new feature, allow Django-PJAX to specify a container name. This is useful if you have more than one PJAX in the same template that points to the same view. For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;djpjax&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pjax&lt;/span&gt;

&lt;span class="nd"&gt;@pjax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pjax.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# This is the default template.&lt;/span&gt;
&lt;span class="nd"&gt;@pjax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pjax_inner.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;#pjax-inner-content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# This is the template for #pjax-inner-content.&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;my_view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;TemplateResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;template.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;my&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;context&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We also add compatibility with Python 3. This new version works on Python 2 and 3 and any version of Django after 1.3.&lt;/p&gt;
&lt;p&gt;You may be asking, is this a new project? No. It's the same. We owned the &lt;a href="https://pypi.python.org/pypi/django-pjax"&gt;original PyPi project&lt;/a&gt;, so you just need to run &lt;em&gt;pip install django-pjax --upgrade&lt;/em&gt; to use this new version.&lt;/p&gt;
&lt;p&gt;You can find the new version of Django-PJAX &lt;a href="https://github.com/eventials/django-pjax"&gt;here&lt;/a&gt;. Hope you like it.&lt;/p&gt;</content><category term="django"></category><category term="pjax"></category><category term="jQuery"></category><category term="python"></category></entry><entry><title>Alexandre's Blog is back</title><link href="https://blog.alexandrevicenzi.com/im-back.html" rel="alternate"></link><published>2015-07-08T08:00:00-04:00</published><updated>2015-07-08T08:00:00-04:00</updated><author><name>Alexandre Vicenzi</name></author><id>tag:blog.alexandrevicenzi.com,2015-07-08:/im-back.html</id><summary type="html">&lt;p&gt;After a while with my personal blog off, I decided to start a new one.&lt;/p&gt;
&lt;p&gt;This new blog uses &lt;a href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;, a static site generator powered by Python.&lt;/p&gt;
&lt;p&gt;I will use this blog to talk about things that I'm working on. Most of time will be personal projects.&lt;/p&gt;</summary><content type="html">&lt;p&gt;After a while with my personal blog off, I decided to start a new one.&lt;/p&gt;
&lt;p&gt;This new blog uses &lt;a href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;, a static site generator powered by Python.&lt;/p&gt;
&lt;p&gt;I will use this blog to talk about things that I'm working on. Most of time will be personal projects.&lt;/p&gt;</content><category term="blog"></category></entry></feed>